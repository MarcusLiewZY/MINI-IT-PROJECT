"""CommentNotification model

Revision ID: 1b729931f8e7
Revises: 2c2123e8fbf4
Create Date: 2024-04-27 21:09:05.949053

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "1b729931f8e7"
down_revision = "2c2123e8fbf4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("CommentNotification")
    op.create_table(
        "CommentNotification",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("is_read", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("comment_id", sa.UUID(), nullable=True),
        sa.Column("unread_comment_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["Comment.id"],
        ),
        sa.ForeignKeyConstraint(
            ["unread_comment_id"],
            ["Comment.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("_alembic_tmp_Comment")
    with op.batch_alter_table("Comment", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )
        batch_op.alter_column(
            "replied_comment_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    with op.batch_alter_table("CommentLike", schema=None) as batch_op:
        batch_op.alter_column(
            "user_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "comment_id ",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    with op.batch_alter_table("Post", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    with op.batch_alter_table("PostBookmark", schema=None) as batch_op:
        batch_op.alter_column(
            "user_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "post_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    with op.batch_alter_table("PostLike", schema=None) as batch_op:
        batch_op.alter_column(
            "user_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "post_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    with op.batch_alter_table("PostNotification", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "post_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "unread_comment_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    with op.batch_alter_table("PostTag", schema=None) as batch_op:
        batch_op.alter_column(
            "post_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "tag_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    with op.batch_alter_table("Tag", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )

    with op.batch_alter_table("User", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("User", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("Tag", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("PostTag", schema=None) as batch_op:
        batch_op.alter_column(
            "tag_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "post_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )

    with op.batch_alter_table("PostNotification", schema=None) as batch_op:
        batch_op.alter_column(
            "unread_comment_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "post_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("PostLike", schema=None) as batch_op:
        batch_op.alter_column(
            "post_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )

    with op.batch_alter_table("PostBookmark", schema=None) as batch_op:
        batch_op.alter_column(
            "post_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )

    with op.batch_alter_table("Post", schema=None) as batch_op:
        batch_op.alter_column(
            "user_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("CommentLike", schema=None) as batch_op:
        batch_op.alter_column(
            "comment_id ",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )

    with op.batch_alter_table("Comment", schema=None) as batch_op:
        batch_op.alter_column(
            "replied_comment_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    op.create_table(
        "_alembic_tmp_Comment",
        sa.Column("id", sa.NUMERIC(), nullable=False),
        sa.Column("content", sa.VARCHAR(), nullable=False),
        sa.Column("is_report", sa.BOOLEAN(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("update_at", sa.DATETIME(), nullable=False),
        sa.Column("replied_comment_id", sa.NUMERIC(), nullable=True),
        sa.ForeignKeyConstraint(
            ["replied_comment_id"],
            ["Comment.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("CommentNotification")
    # ### end Alembic commands ###
