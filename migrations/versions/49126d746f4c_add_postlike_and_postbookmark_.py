"""add postlike and postbookmark relathionship tables

Revision ID: 49126d746f4c
Revises: aa21bca55593
Create Date: 2024-04-27 19:16:42.447741

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '49126d746f4c'
down_revision = 'aa21bca55593'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('PostBookmark',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['Post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], )
    )
    op.create_table('PostLike',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['Post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], )
    )
    with op.batch_alter_table('Post', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=True)

    with op.batch_alter_table('PostTag', schema=None) as batch_op:
        batch_op.alter_column('post_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=True)
        batch_op.alter_column('tag_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=True)

    with op.batch_alter_table('Tag', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    with op.batch_alter_table('Tag', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    with op.batch_alter_table('PostTag', schema=None) as batch_op:
        batch_op.alter_column('tag_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
        batch_op.alter_column('post_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=True)

    with op.batch_alter_table('Post', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    op.drop_table('PostLike')
    op.drop_table('PostBookmark')
    # ### end Alembic commands ###
